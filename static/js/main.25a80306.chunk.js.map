{"version":3,"sources":["UserTable.js","App.js","index.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","UserTable","api","axios","create","baseURL","useState","data","setData","setIserror","setErrorMessages","useEffect","get","then","res","console","log","catch","error","title","columns","field","hidden","icons","editable","onRowUpdate","newData","oldData","Promise","resolve","errorList","first_name","push","last_name","email","length","patch","id","dataUpdate","tableData","handleRowUpdate","onRowAdd","undefined","post","dataToAdd","handleRowAdd","onRowDelete","delete","dataDelete","index","splice","handleRowDelete","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25a80306.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from 'react';\r\nimport MaterialTable from \"material-table\";\r\n\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nfunction UserTable(){\r\n\r\n    const api = axios.create({\r\n        baseURL: `https://reqres.in/api`\r\n      })\r\n\r\n    var columns = [\r\n        {title: \"id\", field: \"id\", hidden: true},\r\n        {title: \"First name\", field: \"first_name\"},\r\n        {title: \"Last name\", field: \"last_name\"},\r\n        {title: \"email\", field: \"email\"}\r\n      ]\r\n\r\n      const [data, setData] = useState([]); \r\n      const [iserror, setIserror] = useState(false);\r\n      const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n      useEffect(() => {\r\n        api.get(\"/users\")\r\n          .then(res => {\r\n            setData(res.data.data)\r\n            console.log(res.data.data);\r\n          })\r\n          .catch(error=>{\r\n            setErrorMessages([\"Cannot load user data\"])\r\n            setIserror(true)\r\n          })\r\n      }, []);\r\n\r\n      const handleRowUpdate = (newData, oldData, resolve) => {\r\n        //validation\r\n        let errorList = []\r\n        if(newData.first_name === \"\"){\r\n          errorList.push(\"Please enter first name\")\r\n        }\r\n        if(newData.last_name === \"\"){\r\n          errorList.push(\"Please enter last name\")\r\n        }\r\n        if(newData.email === \"\" ){\r\n          errorList.push(\"Please enter a valid email\")\r\n        }\r\n    \r\n        if(errorList.length < 1){\r\n          api.patch(\"/users/\"+newData.id, newData)\r\n          .then(res => {\r\n            const dataUpdate = [...data];\r\n            const index = oldData.tableData.id;\r\n            dataUpdate[index] = newData;\r\n            setData([...dataUpdate]);\r\n            resolve()\r\n            setIserror(false)\r\n            setErrorMessages([])\r\n          })\r\n          .catch(error => {\r\n            setErrorMessages([\"Update failed! Server error\"])\r\n            setIserror(true)\r\n            resolve()\r\n            \r\n          })\r\n        }else{\r\n          setErrorMessages(errorList)\r\n          setIserror(true)\r\n          resolve()\r\n    \r\n        }\r\n        \r\n      }\r\n    \r\n      const handleRowAdd = (newData, resolve) => {\r\n        //validation\r\n        let errorList = []\r\n        if(newData.first_name === undefined){\r\n          errorList.push(\"Please enter first name\")\r\n        }\r\n        if(newData.last_name === undefined){\r\n          errorList.push(\"Please enter last name\")\r\n        }\r\n        if(newData.email === undefined ){\r\n          errorList.push(\"Please enter a valid email\")\r\n        }\r\n    \r\n        if(errorList.length < 1){ //no error\r\n          api.post(\"/users\", newData)\r\n          .then(res => {\r\n            let dataToAdd = [...data];\r\n            dataToAdd.push(newData);\r\n            setData(dataToAdd);\r\n            resolve()\r\n            setErrorMessages([])\r\n            setIserror(false)\r\n          })\r\n          .catch(error => {\r\n            setErrorMessages([\"Cannot add data. Server error!\"])\r\n            setIserror(true)\r\n            resolve()\r\n          })\r\n        }else{\r\n          setErrorMessages(errorList)\r\n          setIserror(true)\r\n          resolve()\r\n        }\r\n    \r\n        \r\n      }\r\n    \r\n      const handleRowDelete = (oldData, resolve) => {\r\n        \r\n        api.delete(\"/users/\"+oldData.id)\r\n          .then(res => {\r\n            const dataDelete = [...data];\r\n            const index = oldData.tableData.id;\r\n            dataDelete.splice(index, 1);\r\n            setData([...dataDelete]);\r\n            resolve()\r\n          })\r\n          .catch(error => {\r\n            setErrorMessages([\"Delete failed! Server error\"])\r\n            setIserror(true)\r\n            resolve()\r\n          })\r\n      }\r\n      \r\n\r\n    return(\r\n        <MaterialTable\r\n            title=\"USERS\"\r\n            columns={columns}\r\n            data={data}\r\n            icons={tableIcons}\r\n            editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                    new Promise((resolve) => {\r\n                        handleRowUpdate(newData, oldData, resolve);\r\n                }),\r\n                onRowAdd: (newData) =>\r\n                    new Promise((resolve) => {\r\n                    handleRowAdd(newData, resolve)\r\n                }),\r\n                onRowDelete: (oldData) =>\r\n                    new Promise((resolve) => {\r\n                    handleRowDelete(oldData, resolve)\r\n                }),\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default UserTable;","import UserTable from \"./UserTable\";\n\nfunction App() {\n  return (\n    <UserTable />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}